{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample using React Dojo API.",
        "version": "1.0.0",
        "title": "Swagger React Dojo",
        "contact": {
            "email": "reactdojodemo@gmail.com"
        }
    },
    "servers": [
        {
            "url": "http://localhost:5000/react-dojo-demo/us-central1/app",
            "description": "Development Server (localhost)"
        },
        {
            "url": "https://us-central1-react-dojo-demo.cloudfunctions.net/app",
            "description": "Production Server"
        }
    ],
    "host": "us-central1-react-dojo-demo.cloudfunctions.net/app",
    "basePath": "",
    "tags": [
        {
            "name": "Projects",
            "description": "Everything about your Projects"
        },
        {
            "name": "Tasks",
            "description": "Access to Project Tasks"
        }
    ],
    "schemes": [
        "https"
    ],
    "paths": {
        "/projects": {
            "get": {
                "tags": [
                    "Projects"
                ],
                "summary": "Get a list of all available projects",
                "description": "",
                "operationId": "",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Successful Operation"
                    }
                }
            }
        }
    },
    "definitions": {
        "Project": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "name": {
                    "type": "string"
                },
                "quantity": {
                    "type": "integer",
                    "format": "int32"
                },
                "shipDate": {
                    "type": "string",
                    "format": "date-time"
                },
                "status": {
                    "type": "string",
                    "description": "Order Status",
                    "enum": [
                        "placed",
                        "approved",
                        "delivered"
                    ]
                },
                "complete": {
                    "type": "boolean",
                    "default": false
                }
            },
            "xml": {
                "name": "Order"
            }
        },
        "APIResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    }
}